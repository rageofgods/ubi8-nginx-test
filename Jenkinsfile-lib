@Library('libdso') _

DOCKERFILE_NAME = "${params.DOCKERFILE_NAME}"
TEMPLATE_NAME = "${params.TEMPLATE_NAME}"
DOCKER_REGISTRY = "${params.DOCKER_REGISTRY}"
OCKER_REGISTRY_AUTH_ID = "${params.DOCKER_REGISTRY_AUTH_ID}"
BUILD_NAME = "${params.BUILD_NAME}"
RH_REGISTRY = "${params.RH_REGISTRY}"
RH_REGISTRY_AUTH_ID = "${params.RH_REGISTRY_AUTH_ID}"
OCP_URL = "${params.OCP_URL}"
OCP_AUTH_ID = "${params.OCP_AUTH_ID}"
IMAGESTREAM = "${params.IMAGESTREAM}"
DEPLOY_ENV = "${params.DEPLOY_ENV}"
GIT_COMMIT_SHORT = sh(
    script: "printf \$(git rev-parse --short ${GIT_COMMIT})",
    returnStdout: true

ext_test_pipeline(deploy_env: "$DEPLOY_ENV", dockerfile_name: "$DOCKERFILE_NAME",
                        template_name: "$TEMPLATE_NAME", docker_registry: "$DOCKER_REGISTRY",
                        docker_registry_auth_id: "$DOCKER_REGISTRY_AUTH_ID",
                        build_name: "$BUILD_NAME", rh_registry: "$RH_REGISTRY",
                        rh_registry_auth_id: "$RH_REGISTRY_AUTH_ID", ocp_url: "$OCP_URL",
                        ocp_auth_id: "$OCP_AUTH_ID", imagestream: "$IMAGESTREAM")

    